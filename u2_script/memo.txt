ls -F # / : directory, * : executable
ls -ld direcotry
cd - # before
cp -v bla_2 bla_3
cp -i bla dir-9 (overwrite)
rm -i bla
cat -n $file
cat $file $file1

cat <
hello

less (new command line) => n, b   / search
more,cat (present command line)

echo -e => \n \t \t\t \c (cancel new line) \v (\t \n \t, vertical tab)

touch -c $file (update timestamp if exists, otherwise nothing happens)
mkdir -p new_fold/somefolder_1

*
? -> Any single character
ls ??.txt
[] -> or
ls [abc]*
ls [abc][ab].txt
! -> exclude
[!abc] -> any character that is not 'a' 'b' or 'c'
character classes [[:alpha:]]
ls [[:alpha:]]*.txt
ls [[:digit:]]*.txt
ls [[:lower:]]*.txt
ls [[:upper:]]*.txt

echo ${var}
echo ${bob}
parenthesis

unset bob
echo ${#a} # length
echo ${a:4} # start with fourth char
echo ${b:4:3}
echo ${a: -3} # last three
echo ${a:0}
echo ${a: -4:2}

b="hello there"
echo ${b#h} # remove h temporarily
> ello there
echo ${b#w}
> hello there
echo ${b#*t}
> here

a=123456789
echo ${a%9} # end
> 12345678
echo ${a%3*}
> 12

.profile .bashrc .bash_profile .login

read
echo $REPLY

redirect stdout 1>
stderror 2>

ls -l 1> a_file.txt
1>> >>
cat file1 file2 > file3

cat
cat 1> file

ls -l asdfsdf 2> file

&> (standard output, standard error)
ls -l asdf 1> file 2> file

ech "hello" 2> /dev/null

tail -4 file
ls dir | tail -3 | sort | less
ls dir | tail -3 | sort > file

grep -i
ls | grep t
grep -v

echo {1, 2, 3}
> 1 2 3
echo {1,2,3,4}file
> 1file 2file 3file 4file
echo example{1..13}
example1 ...  example13

touch file{1..8}
mkdir myfolder_{4..12}

echo {a,b,c}_{1,2,3} #combination

chmod u=r file

=== section 2 ===
gedit hello
subl hello

if [ $num -eq 18 ]; then
if [ $num -ne 18 ]; then
if [ $num -lt 18 ]; then #lower than
if [ $num -gt 18 ]; then
if [ $num -le 18 ]; then
if [ $num -ge 18 ]; then

if [ -e "$myfile" ]; then
if [ -d "$mydir" ]; then
if [ -s "$myfile" ]; then # not empty

if [ -r "$myfile" ]; then
if [ -w "$myfile" ]; then
if [ -x "$myfile" ]; then

if [ ! -s "$myfile" ]; then # empty

if [ $num -gt 3 -a $num -lt 3 ]; then
if [ $num -lt 3 -o $num -gt 3 ]; then
if [ -s "$myfile" -a -x "$myfile" ]; then

if [[ $num -lt 10 && num -gt 3]]; then
AND ---> && (ofc -a works)
OR ---> || (ofc -o works)

for i in {1,2,3,4}; do
    touch "${i}.xls"
done

for i in {3..12}; do
for i in {b..f}_file; do
for i in {b..f}{1..3}; do

for i in {1, 2, 3}; do
    if [ $i == "2" ]; then
        break;
    fi
done

for i in ./* ; do
for i in ./*.txt ; do

for (( i = 0; i < 25; i=i+1 )); do
done

back 4 (cd ../ x4)

bash or sh <= subshell, sh is old
exit

source script.sh
exit -> current shell 나감
. script.sh (동일)

=== 3개 ===
type cat # executable program; cat; ourscripts
> cat is /bin/cat

type cd # shell builtins; cd; type
> cd is a shell builtin

type lf # alias
lf is a aliased to ls -Flha
=== 3개 ===

alias ll='ls -l'
alias yellow='ls ../'
type yellow
alias yellow

multiple command
; && |

ls; cd; echo "hello"
alias cpl='clear; pwd; echo "###"; ls -l'
unalias yellow
alias

subl .profile

# Command Substitution --- command expansion
which cd
ls -l /usr/bin/cd
=> ls -l $(which cd)

# storing output of a command inside a variable
a=$(pwd)

d=$(date)
echo ""$d --- $(date)"

$1 parameter
$(12) 12 번째 인자
$# the number of parameter
$@ all parameters
=> for i in "$@"; do

$* 도 전체지만 for loop에서 전체가 하나로 인식됨
